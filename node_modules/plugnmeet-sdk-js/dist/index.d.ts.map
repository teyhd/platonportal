{"mappings":"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","sources":["src/src/ApiTransport.ts","src/src/types/activeRoomInfo.ts","src/src/types/createRoom.ts","src/src/types/joinToken.ts","src/src/types/isRoomActive.ts","src/src/types/activeRoomsInfo.ts","src/src/types/endRoom.ts","src/src/types/fetchRecordings.ts","src/src/types/deleteRecordings.ts","src/src/types/recordingDownloadToken.ts","src/src/types/clientFiles.ts","src/src/types/fetchPastRoomsInfo.ts","src/src/types/fetchAnalytics.ts","src/src/types/deleteAnalytics.ts","src/src/types/analyticsDownloadToken.ts","src/src/types/PlugNmeetAPI.ts","src/src/PlugNmeet.ts","src/PlugNmeet.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import { ApiTransport } from './ApiTransport';\nimport { CreateRoomParams, CreateRoomResponse } from './types/createRoom';\nimport { JoinTokenParams, JoinTokenResponse } from './types/joinToken';\nimport { IsRoomActiveParams, IsRoomActiveResponse } from './types/isRoomActive';\nimport {\n  ActiveRoomInfoParams,\n  ActiveRoomInfoResponse,\n} from './types/activeRoomInfo';\nimport { ActiveRoomsInfoResponse } from './types/activeRoomsInfo';\nimport { EndRoomParams, EndRoomResponse } from './types/endRoom';\nimport {\n  FetchRecordingsParams,\n  FetchRecordingsResponse,\n} from './types/fetchRecordings';\nimport {\n  DeleteRecordingsParams,\n  DeleteRecordingsResponse,\n} from './types/deleteRecordings';\nimport {\n  RecordingDownloadTokenParams,\n  RecordingDownloadTokenResponse,\n} from './types/recordingDownloadToken';\nimport { ClientFilesResponse } from './types/clientFiles';\nimport {\n  FetchRoomsInfoResponse,\n  FetchPastRoomsInfoParams,\n} from './types/fetchPastRoomsInfo';\nimport {\n  FetchAnalyticsParams,\n  FetchAnalyticsResponse,\n} from './types/fetchAnalytics';\nimport {\n  DeleteAnalyticsParams,\n  DeleteAnalyticsResponse,\n} from './types/deleteAnalytics';\nimport {\n  AnalyticsDownloadTokenParams,\n  AnalyticsDownloadTokenResponse,\n} from './types/analyticsDownloadToken';\nimport { PlugNmeetAPI } from './types/PlugNmeetAPI';\n\nexport class PlugNmeet implements PlugNmeetAPI {\n  protected defaultPath = '/auth';\n  private apiTransport: ApiTransport;\n\n  /**\n   * @param serverUrl plugNmeet server URL\n   * @param apiKey plugNmeet API_Key\n   * @param apiSecret plugNmeet API_Secret\n   */\n  constructor(serverUrl: string, apiKey: string, apiSecret: string) {\n    this.apiTransport = new ApiTransport(\n      serverUrl + this.defaultPath,\n      apiKey,\n      apiSecret,\n    );\n  }\n\n  /**\n   * Create new room\n   * @param params\n   * @returns Promise<CreateRoomResponse>\n   */\n  public async createRoom(\n    params: CreateRoomParams,\n  ): Promise<CreateRoomResponse> {\n    const output = await this.apiTransport.sendRequest('/room/create', params);\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n      room_info: output.response.room_info,\n    };\n  }\n\n  /**\n   * Generate join token\n   * @param params\n   * @returns Promise<JoinTokenResponse>\n   */\n  public async getJoinToken(\n    params: JoinTokenParams,\n  ): Promise<JoinTokenResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/room/getJoinToken',\n      params,\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n      token: output.response.token,\n    };\n  }\n\n  /**\n   * If room is active or not\n   * @param params\n   * @returns Promise<IsRoomActiveResponse>\n   */\n  public async isRoomActive(\n    params: IsRoomActiveParams,\n  ): Promise<IsRoomActiveResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/room/isRoomActive',\n      params,\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      is_active: output.response.is_active,\n      msg: output.response.msg,\n    };\n  }\n\n  /**\n   * Get active room information\n   * @param params\n   * @returns Promise<ActiveRoomInfoResponse>\n   */\n  public async getActiveRoomInfo(\n    params: ActiveRoomInfoParams,\n  ): Promise<ActiveRoomInfoResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/room/getActiveRoomInfo',\n      params,\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n      room: output.response.room,\n    };\n  }\n\n  /**\n   * Get all active rooms\n   * @returns Promise<ActiveRoomsInfoResponse>\n   */\n  public async getActiveRoomsInfo(): Promise<ActiveRoomsInfoResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/room/getActiveRoomsInfo',\n      {},\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n      rooms: output.response.rooms,\n    };\n  }\n\n  /**\n   * Fetch info about past rooms\n   * @param params\n   * @returns Promise<FetchRoomsInfoResponse>\n   */\n  public async fetchPastRoomsInfo(\n    params: FetchPastRoomsInfoParams,\n  ): Promise<FetchRoomsInfoResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/room/fetchPastRooms',\n      params,\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n      result: output.response.result,\n    };\n  }\n\n  /**\n   * End active room\n   * @param params\n   * @returns Promise<EndRoomResponse>\n   */\n  public async endRoom(params: EndRoomParams): Promise<EndRoomResponse> {\n    const output = await this.apiTransport.sendRequest('/room/endRoom', params);\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n    };\n  }\n\n  /**\n   * Fetch analytics\n   * @param params\n   * @returns Promise<FetchAnalyticsResponse>\n   */\n  public async fetchAnalytics(\n    params: FetchAnalyticsParams,\n  ): Promise<FetchAnalyticsResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/analytics/fetch',\n      params,\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n      result: output.response.result,\n    };\n  }\n\n  /**\n   * Delete analytics\n   * @param params\n   * @returns Promise<DeleteAnalyticsResponse>\n   */\n  public async deleteAnalytics(\n    params: DeleteAnalyticsParams,\n  ): Promise<DeleteAnalyticsResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/analytics/delete',\n      params,\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n    };\n  }\n\n  /**\n   * Generate token to download recording\n   * @param params\n   * @returns Promise<AnalyticsDownloadTokenResponse>\n   */\n  public async getAnalyticsDownloadToken(\n    params: AnalyticsDownloadTokenParams,\n  ): Promise<AnalyticsDownloadTokenResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/analytics/getDownloadToken',\n      params,\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n      token: output.response.token,\n    };\n  }\n\n  /**\n   * Fetch recordings\n   * @param params\n   * @returns Promise<FetchRecordingsResponse>\n   */\n  public async fetchRecordings(\n    params: FetchRecordingsParams,\n  ): Promise<FetchRecordingsResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/recording/fetch',\n      params,\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n      result: output.response.result,\n    };\n  }\n\n  /**\n   * Delete recording\n   * @param params\n   * @returns Promise<DeleteRecordingsResponse>\n   */\n  public async deleteRecordings(\n    params: DeleteRecordingsParams,\n  ): Promise<DeleteRecordingsResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/recording/delete',\n      params,\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n    };\n  }\n\n  /**\n   * Generate token to download recording\n   * @param params\n   * @returns Promise<RecordingDownloadTokenResponse>\n   */\n  public async getRecordingDownloadToken(\n    params: RecordingDownloadTokenParams,\n  ): Promise<RecordingDownloadTokenResponse> {\n    const output = await this.apiTransport.sendRequest(\n      '/recording/getDownloadToken',\n      params,\n    );\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n      token: output.response.token,\n    };\n  }\n\n  /**\n   * To get JS & CSS files to build interface\n   * @returns Promise<ClientFilesResponse>\n   */\n  public async getClientFiles(): Promise<ClientFilesResponse> {\n    const output = await this.apiTransport.sendRequest('/getClientFiles', {});\n    if (!output.status) {\n      return {\n        status: false,\n        msg: output.response,\n      };\n    }\n\n    return {\n      status: output.response.status,\n      msg: output.response.msg,\n      css: output.response.css,\n      js: output.response.js,\n    };\n  }\n}\n"],"names":[],"version":3,"file":"index.d.ts.map"}